name: Build NTSleuth

on:
  push:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
      - 'docs/**'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
      - 'docs/**'
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        arch: [x64, x86, ARM64]
        include:
          - arch: x64
            platform: x64
            output_name: ntsleuth-x64.exe
          - arch: x86
            platform: Win32
            output_name: ntsleuth-x86.exe
          - arch: ARM64
            platform: ARM64
            output_name: ntsleuth-arm64.exe
    
    name: Build ${{ matrix.arch }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive  # Initialize any git submodules

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Setup CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: latest
        ninjaVersion: latest

    - name: Cache build directory
      uses: actions/cache@v4
      with:
        path: build
        key: ${{ runner.os }}-build-${{ matrix.arch }}-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.arch }}-
          ${{ runner.os }}-build-

    - name: Configure CMake
      run: |
        if (Test-Path build) { Remove-Item -Recurse -Force build }
        New-Item -ItemType Directory -Force -Path build
        cd build
        cmake .. -G "Visual Studio 17 2022" -A ${{ matrix.platform }} -DCMAKE_BUILD_TYPE=Release
      shell: pwsh

    - name: Build NTSleuth
      run: |
        cd build
        cmake --build . --config Release --parallel
      shell: pwsh

    - name: Test executable exists
      run: |
        if (Test-Path "ntsleuth.exe") {
          Write-Host "‚úì Build successful: ntsleuth.exe found in root directory"
          # Get file info
          $fileInfo = Get-Item "ntsleuth.exe"
          Write-Host "  Size: $($fileInfo.Length / 1MB) MB"
          Write-Host "  Created: $($fileInfo.CreationTime)"
        } else {
          Write-Host "‚úó Build failed: ntsleuth.exe not found"
          exit 1
        }
      shell: pwsh

    - name: Rename executable for architecture
      run: |
        if (Test-Path "ntsleuth.exe") {
          Copy-Item "ntsleuth.exe" "${{ matrix.output_name }}"
          Write-Host "Renamed to ${{ matrix.output_name }}"
        }
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: NTSleuth-${{ matrix.arch }}
        path: ${{ matrix.output_name }}
        retention-days: 30

  create-release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: write  # Required for creating releases
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: Get-ChildItem -Recurse artifacts
      shell: pwsh

    - name: Prepare release files
      run: |
        New-Item -ItemType Directory -Force -Path release
        
        # Copy executables
        Copy-Item "artifacts/NTSleuth-x64/ntsleuth-x64.exe" "release/"
        Copy-Item "artifacts/NTSleuth-x86/ntsleuth-x86.exe" "release/"
        Copy-Item "artifacts/NTSleuth-ARM64/ntsleuth-arm64.exe" "release/"
        
        # Create SHA256 checksums
        $files = Get-ChildItem "release/*.exe"
        foreach ($file in $files) {
          $hash = (Get-FileHash $file -Algorithm SHA256).Hash
          "$hash  $($file.Name)" | Out-File -Append "release/checksums.txt"
        }
        
        Write-Host "Release files prepared:"
        Get-ChildItem release
      shell: pwsh

    - name: Create version info
      id: version
      run: |
        $date = Get-Date -Format "yyyy.MM.dd"
        $shortSha = "${{ github.sha }}".Substring(0, 7)
        $version = "v$date-$shortSha"
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "date=$date" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Create GitHub Release
      if: github.event_name == 'push' && contains(github.ref, 'main')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: NTSleuth ${{ steps.version.outputs.version }}
        body: |
          ## NTSleuth Build ${{ steps.version.outputs.date }}
          
          Automated build from commit ${{ github.sha }}
          
          ### üì¶ Downloads
          - **x64**: `ntsleuth-x64.exe` - For 64-bit Windows
          - **x86**: `ntsleuth-x86.exe` - For 32-bit Windows  
          - **ARM64**: `ntsleuth-arm64.exe` - For ARM64 Windows
          
          ### üîê Checksums
          See `checksums.txt` for SHA256 hashes
          
          ### üìù Commit
          ${{ github.event.head_commit.message }}
          
          ---
          *This is an automated build. Report issues at https://github.com/xaitax/NTSleuth/issues*
        files: |
          release/ntsleuth-x64.exe
          release/ntsleuth-x86.exe
          release/ntsleuth-arm64.exe
          release/checksums.txt
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-single-script:
    # Alternative job that uses your build.bat directly
    runs-on: windows-latest
    if: false  # Set to true if you want to use build.bat instead
    
    strategy:
      matrix:
        arch: [x64, x86, ARM64]
    
    name: Build via build.bat - ${{ matrix.arch }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Run build.bat
      run: |
        # Modify build.bat to accept architecture parameter
        .\build.bat ${{ matrix.arch }}
      shell: cmd

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: NTSleuth-buildscript-${{ matrix.arch }}
        path: ntsleuth.exe
        retention-days: 30